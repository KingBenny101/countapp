name: 'Build and Release'

on:
  push:
    branches: ['master']

jobs:
  build:
    name: Build & Release
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      #2 Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'temurin'
          java-version: '20'

      #3 Setup Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      #4 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

      #5 Extract Version
      - name: Extract version from pubspec.yaml
        id: extract_version_windows
        shell: pwsh
        run: |
          $pubspecContent = Get-Content "pubspec.yaml"
          foreach ($line in $pubspecContent) {
              if ($line -match '^version:\s*(\S+)') {
                  $version = $Matches[1]
                  break
              }
          }
          echo "Extracted version: $version"
          Add-Content -Path $env:GITHUB_ENV -Value "VERSION=$version"

      #6 Decode Keystore File
      - name: Decode Keystore File
        run: |
          [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String("${{ secrets.ANDROID_KEYSTORE }}")) | Set-Content -Path android/app/keystore.jks
        shell: pwsh
      
      #7 Create key.properties file
      - name: Create key.properties
        run: |
          $content = @"
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEYSTORE_ALIAS }}
          storeFile=keystore.jks
          "@
          Set-Content -Path android/app/key.properties -Value $content
        shell: pwsh

      
      #8 Build Signed APK
      - name: Build Signed APK
        run: flutter build apk --release
      
      #9 Rename the APK file
      - name: Rename APK file
        shell: pwsh
        run: |
          $APK_SOURCE = "build/app/outputs/flutter-apk/app-release.apk"
          $folder = Split-Path $APK_SOURCE
          $version = ${env:VERSION}
          if ([string]::IsNullOrEmpty($version)) {
            $version = "default"
          }
          $NewFileName = "countapp-$version.apk"
          Write-Output "Renaming $APK_SOURCE to $folder/$NewFileName"
          Rename-Item -Path $APK_SOURCE -NewName $NewFileName

      #10 Build Windows Executable
      - name: Build Windows Executable
        run: flutter build windows --release

      #11 Compress Artifacts
      - name: Compress Artifacts
        shell: powershell
        run: |
          $version = $env:VERSION
          $NewFileName = "countapp-$version.zip"
          Compress-Archive -Path 'build/windows/x64/runner/Release/*' -DestinationPath $NewFileName

      #12 Upload Artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/countapp-${{ env.VERSION }}.apk
            countapp-${{ env.VERSION }}.zip

      #13 Create Release
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'build/app/outputs/flutter-apk/countapp-${{ env.VERSION }}.apk,countapp-${{ env.VERSION }}.zip'
          allowUpdates: true
          generateReleaseNotes: true
          name: Count App ${{ env.VERSION }}
          tag: ${{ env.VERSION }}
